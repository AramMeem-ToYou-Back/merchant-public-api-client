/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.am.rest.client.catalog.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * AuthTokensDto
 */


public class AuthTokensDto {
  @JsonProperty("authExpirationDate")
  private Integer authExpirationDate = null;

  @JsonProperty("authExpirationPeriod")
  private Integer authExpirationPeriod = null;

  @JsonProperty("authToken")
  private String authToken = null;

  @JsonProperty("refreshExpirationDate")
  private Integer refreshExpirationDate = null;

  @JsonProperty("refreshExpirationPeriod")
  private Integer refreshExpirationPeriod = null;

  @JsonProperty("refreshToken")
  private String refreshToken = null;

  public AuthTokensDto authExpirationDate(Integer authExpirationDate) {
    this.authExpirationDate = authExpirationDate;
    return this;
  }

   /**
   * AuthToken Expiration time. Expressed in seconds that have elapsed since epoch.
   * @return authExpirationDate
  **/
  @Schema(required = true, description = "AuthToken Expiration time. Expressed in seconds that have elapsed since epoch.")
  public Integer getAuthExpirationDate() {
    return authExpirationDate;
  }

  public void setAuthExpirationDate(Integer authExpirationDate) {
    this.authExpirationDate = authExpirationDate;
  }

  public AuthTokensDto authExpirationPeriod(Integer authExpirationPeriod) {
    this.authExpirationPeriod = authExpirationPeriod;
    return this;
  }

   /**
   * Time left until AuthToken expires. Expressed in seconds.
   * @return authExpirationPeriod
  **/
  @Schema(required = true, description = "Time left until AuthToken expires. Expressed in seconds.")
  public Integer getAuthExpirationPeriod() {
    return authExpirationPeriod;
  }

  public void setAuthExpirationPeriod(Integer authExpirationPeriod) {
    this.authExpirationPeriod = authExpirationPeriod;
  }

  public AuthTokensDto authToken(String authToken) {
    this.authToken = authToken;
    return this;
  }

   /**
   * A JSON Web token intended for user authorization needs.
   * @return authToken
  **/
  @Schema(required = true, description = "A JSON Web token intended for user authorization needs.")
  public String getAuthToken() {
    return authToken;
  }

  public void setAuthToken(String authToken) {
    this.authToken = authToken;
  }

  public AuthTokensDto refreshExpirationDate(Integer refreshExpirationDate) {
    this.refreshExpirationDate = refreshExpirationDate;
    return this;
  }

   /**
   * RefreshToken Expiration time. Expressed in seconds that have elapsed since epoch.
   * @return refreshExpirationDate
  **/
  @Schema(required = true, description = "RefreshToken Expiration time. Expressed in seconds that have elapsed since epoch.")
  public Integer getRefreshExpirationDate() {
    return refreshExpirationDate;
  }

  public void setRefreshExpirationDate(Integer refreshExpirationDate) {
    this.refreshExpirationDate = refreshExpirationDate;
  }

  public AuthTokensDto refreshExpirationPeriod(Integer refreshExpirationPeriod) {
    this.refreshExpirationPeriod = refreshExpirationPeriod;
    return this;
  }

   /**
   * Time left until RefreshToken expires. Expressed in seconds.
   * @return refreshExpirationPeriod
  **/
  @Schema(required = true, description = "Time left until RefreshToken expires. Expressed in seconds.")
  public Integer getRefreshExpirationPeriod() {
    return refreshExpirationPeriod;
  }

  public void setRefreshExpirationPeriod(Integer refreshExpirationPeriod) {
    this.refreshExpirationPeriod = refreshExpirationPeriod;
  }

  public AuthTokensDto refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * A JSON Web token intended for authorization token refreshing.
   * @return refreshToken
  **/
  @Schema(required = true, description = "A JSON Web token intended for authorization token refreshing.")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthTokensDto authTokensDto = (AuthTokensDto) o;
    return Objects.equals(this.authExpirationDate, authTokensDto.authExpirationDate) &&
        Objects.equals(this.authExpirationPeriod, authTokensDto.authExpirationPeriod) &&
        Objects.equals(this.authToken, authTokensDto.authToken) &&
        Objects.equals(this.refreshExpirationDate, authTokensDto.refreshExpirationDate) &&
        Objects.equals(this.refreshExpirationPeriod, authTokensDto.refreshExpirationPeriod) &&
        Objects.equals(this.refreshToken, authTokensDto.refreshToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authExpirationDate, authExpirationPeriod, authToken, refreshExpirationDate, refreshExpirationPeriod, refreshToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthTokensDto {\n");
    
    sb.append("    authExpirationDate: ").append(toIndentedString(authExpirationDate)).append("\n");
    sb.append("    authExpirationPeriod: ").append(toIndentedString(authExpirationPeriod)).append("\n");
    sb.append("    authToken: ").append(toIndentedString(authToken)).append("\n");
    sb.append("    refreshExpirationDate: ").append(toIndentedString(refreshExpirationDate)).append("\n");
    sb.append("    refreshExpirationPeriod: ").append(toIndentedString(refreshExpirationPeriod)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
