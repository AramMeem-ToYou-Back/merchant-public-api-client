/*
 * ToYou's public API:  Orders
 * Allows to get notified about new orders, order status changes and retrieve order details.<br/> As soon as a driver has been assigned to the order, it becomes available to retrieve by 3rd party. It means that driver is already on the way to pickup the order. The status of the order will change during the delivery. ToYou provides the information on each status change of the delivery
 *
 * OpenAPI spec version: 1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.am.rest.client.orders.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * OptionValueOrderedWithProduct
 */


public class OptionValueOrderedWithProduct {
  @JsonProperty("optionValueId")
  private Integer optionValueId = null;

  @JsonProperty("optionId")
  private Integer optionId = null;

  @JsonProperty("optionName")
  private String optionName = null;

  @JsonProperty("optionValueName")
  private String optionValueName = null;

  @JsonProperty("optionValuePrice")
  private BigDecimal optionValuePrice = null;

  @JsonProperty("quantity")
  private Integer quantity = null;

  public OptionValueOrderedWithProduct optionValueId(Integer optionValueId) {
    this.optionValueId = optionValueId;
    return this;
  }

   /**
   * Product option value’s unique ID in ToYou system
   * @return optionValueId
  **/
  @Schema(required = true, description = "Product option value’s unique ID in ToYou system")
  public Integer getOptionValueId() {
    return optionValueId;
  }

  public void setOptionValueId(Integer optionValueId) {
    this.optionValueId = optionValueId;
  }

  public OptionValueOrderedWithProduct optionId(Integer optionId) {
    this.optionId = optionId;
    return this;
  }

   /**
   * Product option’s  unique ID in ToYou system
   * @return optionId
  **/
  @Schema(required = true, description = "Product option’s  unique ID in ToYou system")
  public Integer getOptionId() {
    return optionId;
  }

  public void setOptionId(Integer optionId) {
    this.optionId = optionId;
  }

  public OptionValueOrderedWithProduct optionName(String optionName) {
    this.optionName = optionName;
    return this;
  }

   /**
   * Option name of selected option values in selected language (en or ar)
   * @return optionName
  **/
  @Schema(required = true, description = "Option name of selected option values in selected language (en or ar)")
  public String getOptionName() {
    return optionName;
  }

  public void setOptionName(String optionName) {
    this.optionName = optionName;
  }

  public OptionValueOrderedWithProduct optionValueName(String optionValueName) {
    this.optionValueName = optionValueName;
    return this;
  }

   /**
   * Option value name of selected option values in selected language (en or ar)
   * @return optionValueName
  **/
  @Schema(required = true, description = "Option value name of selected option values in selected language (en or ar)")
  public String getOptionValueName() {
    return optionValueName;
  }

  public void setOptionValueName(String optionValueName) {
    this.optionValueName = optionValueName;
  }

  public OptionValueOrderedWithProduct optionValuePrice(BigDecimal optionValuePrice) {
    this.optionValuePrice = optionValuePrice;
    return this;
  }

   /**
   * Option value price (tax exclusive)
   * @return optionValuePrice
  **/
  @Schema(required = true, description = "Option value price (tax exclusive)")
  public BigDecimal getOptionValuePrice() {
    return optionValuePrice;
  }

  public void setOptionValuePrice(BigDecimal optionValuePrice) {
    this.optionValuePrice = optionValuePrice;
  }

  public OptionValueOrderedWithProduct quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Number of option values ordered
   * @return quantity
  **/
  @Schema(required = true, description = "Number of option values ordered")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptionValueOrderedWithProduct optionValueOrderedWithProduct = (OptionValueOrderedWithProduct) o;
    return Objects.equals(this.optionValueId, optionValueOrderedWithProduct.optionValueId) &&
        Objects.equals(this.optionId, optionValueOrderedWithProduct.optionId) &&
        Objects.equals(this.optionName, optionValueOrderedWithProduct.optionName) &&
        Objects.equals(this.optionValueName, optionValueOrderedWithProduct.optionValueName) &&
        Objects.equals(this.optionValuePrice, optionValueOrderedWithProduct.optionValuePrice) &&
        Objects.equals(this.quantity, optionValueOrderedWithProduct.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(optionValueId, optionId, optionName, optionValueName, optionValuePrice, quantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptionValueOrderedWithProduct {\n");
    
    sb.append("    optionValueId: ").append(toIndentedString(optionValueId)).append("\n");
    sb.append("    optionId: ").append(toIndentedString(optionId)).append("\n");
    sb.append("    optionName: ").append(toIndentedString(optionName)).append("\n");
    sb.append("    optionValueName: ").append(toIndentedString(optionValueName)).append("\n");
    sb.append("    optionValuePrice: ").append(toIndentedString(optionValuePrice)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
