/*
 * ToYou's public API:  Orders
 * Allows to get notified about new orders, order status changes and retrieve order details.<br/> As soon as a driver has been assigned to the order, it becomes available to retrieve by 3rd party. It means that driver is already on the way to pickup the order. The status of the order will change during the delivery. ToYou provides the information on each status change of the delivery
 *
 * OpenAPI spec version: 1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.am.rest.client.orders.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * OrderDataDriver
 */


public class OrderDataDriver {
  @JsonProperty("driverFirstName")
  private String driverFirstName = null;

  @JsonProperty("driverLastName")
  private String driverLastName = null;

  @JsonProperty("driverFirstNameNative")
  private String driverFirstNameNative = null;

  @JsonProperty("driverLastNameNative")
  private String driverLastNameNative = null;

  @JsonProperty("phone")
  private String phone = null;

  public OrderDataDriver driverFirstName(String driverFirstName) {
    this.driverFirstName = driverFirstName;
    return this;
  }

   /**
   * Get driverFirstName
   * @return driverFirstName
  **/
  @Schema(required = true, description = "")
  public String getDriverFirstName() {
    return driverFirstName;
  }

  public void setDriverFirstName(String driverFirstName) {
    this.driverFirstName = driverFirstName;
  }

  public OrderDataDriver driverLastName(String driverLastName) {
    this.driverLastName = driverLastName;
    return this;
  }

   /**
   * Get driverLastName
   * @return driverLastName
  **/
  @Schema(required = true, description = "")
  public String getDriverLastName() {
    return driverLastName;
  }

  public void setDriverLastName(String driverLastName) {
    this.driverLastName = driverLastName;
  }

  public OrderDataDriver driverFirstNameNative(String driverFirstNameNative) {
    this.driverFirstNameNative = driverFirstNameNative;
    return this;
  }

   /**
   * Get driverFirstNameNative
   * @return driverFirstNameNative
  **/
  @Schema(description = "")
  public String getDriverFirstNameNative() {
    return driverFirstNameNative;
  }

  public void setDriverFirstNameNative(String driverFirstNameNative) {
    this.driverFirstNameNative = driverFirstNameNative;
  }

  public OrderDataDriver driverLastNameNative(String driverLastNameNative) {
    this.driverLastNameNative = driverLastNameNative;
    return this;
  }

   /**
   * Get driverLastNameNative
   * @return driverLastNameNative
  **/
  @Schema(description = "")
  public String getDriverLastNameNative() {
    return driverLastNameNative;
  }

  public void setDriverLastNameNative(String driverLastNameNative) {
    this.driverLastNameNative = driverLastNameNative;
  }

  public OrderDataDriver phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(required = true, description = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderDataDriver orderDataDriver = (OrderDataDriver) o;
    return Objects.equals(this.driverFirstName, orderDataDriver.driverFirstName) &&
        Objects.equals(this.driverLastName, orderDataDriver.driverLastName) &&
        Objects.equals(this.driverFirstNameNative, orderDataDriver.driverFirstNameNative) &&
        Objects.equals(this.driverLastNameNative, orderDataDriver.driverLastNameNative) &&
        Objects.equals(this.phone, orderDataDriver.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(driverFirstName, driverLastName, driverFirstNameNative, driverLastNameNative, phone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderDataDriver {\n");
    
    sb.append("    driverFirstName: ").append(toIndentedString(driverFirstName)).append("\n");
    sb.append("    driverLastName: ").append(toIndentedString(driverLastName)).append("\n");
    sb.append("    driverFirstNameNative: ").append(toIndentedString(driverFirstNameNative)).append("\n");
    sb.append("    driverLastNameNative: ").append(toIndentedString(driverLastNameNative)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
